# Environment Configuration for VFlow MQTT Subscriber (Raspberry Pi)
# Copy this file to .env on your Raspberry Pi and update the values

# ==========================================
# MQTT Broker Configuration
# ==========================================
MQTT_BROKER_HOST=192.168.0.89 
MQTT_BROKER_PORT=1883

# MQTT Authentication (optional)
# MQTT_USERNAME=your_username
# MQTT_PASSWORD=your_password

# MQTT Client Settings
MQTT_CLIENT_ID=vflow_sensor_client
MQTT_BASE_TOPIC=vflow
MQTT_QOS_LEVEL=1

# ==========================================
# PostgreSQL Database Configuration
# ==========================================
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DATABASE=sensor_data_rpi
POSTGRES_USER=sensor_user
POSTGRES_PASSWORD=Master123
DATABASE_URL=postgresql://sensor_user:Master123@localhost:5432/sensor_data
# Database table name
POSTGRES_TABLE=sensor_data

# ==========================================
# Logging Configuration
# ==========================================
# LOG_LEVEL options: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO

# ==========================================
# Example Database Setup Commands (PostgreSQL)
# ==========================================
# Run these commands on your Raspberry Pi to setup PostgreSQL:
#
# 1. Install PostgreSQL:
#    sudo apt update
#    sudo apt install postgresql postgresql-contrib
#
# 2. Create database and user:
#    sudo -u postgres createuser --interactive vflow
#    sudo -u postgres createdb vflow_data
#    sudo -u postgres psql -c "ALTER USER vflow PASSWORD 'your_secure_password';"
#    sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE vflow_data TO vflow;"
#
# 3. Enable PostgreSQL service:
#    sudo systemctl enable postgresql
#    sudo systemctl start postgresql
#
# 4. Test connection:
#    psql -h localhost -U vflow -d vflow_data
#
# ==========================================
# MQTT Topics that will be monitored:
# ==========================================
# - vflow/data/bulk           (all sensor data in one message)
# - vflow/sensors/+           (individual sensor values)
# - vflow/status              (device status messages)